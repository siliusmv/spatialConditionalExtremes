// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dconditional_no_beta
arma::vec dconditional_no_beta(arma::mat const& x, arma::sp_mat const& A, arma::vec const& b, arma::mat const& sigma0, double const nugget, bool const logd, bool const na_rm);
RcppExport SEXP _spatialConditionalExtremes_dconditional_no_beta(SEXP xSEXP, SEXP ASEXP, SEXP bSEXP, SEXP sigma0SEXP, SEXP nuggetSEXP, SEXP logdSEXP, SEXP na_rmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat const& >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat const& >::type sigma0(sigma0SEXP);
    Rcpp::traits::input_parameter< double const >::type nugget(nuggetSEXP);
    Rcpp::traits::input_parameter< bool const >::type logd(logdSEXP);
    Rcpp::traits::input_parameter< bool const >::type na_rm(na_rmSEXP);
    rcpp_result_gen = Rcpp::wrap(dconditional_no_beta(x, A, b, sigma0, nugget, logd, na_rm));
    return rcpp_result_gen;
END_RCPP
}
// dconditional
arma::vec dconditional(arma::mat const& x, arma::sp_mat const& A, arma::mat const& B, arma::mat const& sigma0, double const nugget, bool const logd, bool const na_rm);
RcppExport SEXP _spatialConditionalExtremes_dconditional(SEXP xSEXP, SEXP ASEXP, SEXP BSEXP, SEXP sigma0SEXP, SEXP nuggetSEXP, SEXP logdSEXP, SEXP na_rmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat const& >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat const& >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat const& >::type sigma0(sigma0SEXP);
    Rcpp::traits::input_parameter< double const >::type nugget(nuggetSEXP);
    Rcpp::traits::input_parameter< bool const >::type logd(logdSEXP);
    Rcpp::traits::input_parameter< bool const >::type na_rm(na_rmSEXP);
    rcpp_result_gen = Rcpp::wrap(dconditional(x, A, B, sigma0, nugget, logd, na_rm));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_spatialConditionalExtremes_dconditional_no_beta", (DL_FUNC) &_spatialConditionalExtremes_dconditional_no_beta, 7},
    {"_spatialConditionalExtremes_dconditional", (DL_FUNC) &_spatialConditionalExtremes_dconditional, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_spatialConditionalExtremes(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
